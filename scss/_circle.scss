@import "prefix";

@mixin -transform($value) { @include prefix(transform, $value); }

@mixin circle-item($diameter, $deg) {
  $radius: $diameter / 2;
  @if      $deg == 0   { @include -transform(translate($radius));  }
  @else if $deg == 180 { @include -transform(translate(-$radius)); }
  @else {
    $d: #{$deg}deg;
    @include -transform(rotate($d) translate($radius) rotate(-$d));
  }
}

@mixin circle($diameter, $item-size) {
  width:  $diameter;
  height: $diameter;
  position: relative;
  > * {
    position: absolute;
    top:  50%;
    left: 50%;
    width:  $item-size;
    height: $item-size;
    margin: -$item-size;
  }
}

// Circle with even spacing between items. You need to know the number of items
// you want the circle to include in advance.

@mixin spaced-circle($diameter, $item-size, $num-items) {
  @include circle($diameter, $item-size);
  $space: 360 / $num-items;
  $n: 0;
  @while $n < $num-items {
    > :nth-child(#{$n + 1}) { @include circle-item($diameter, $n * $space); }
    $n: $n + 1;
  }
}
